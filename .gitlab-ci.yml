---
stages:
  - test
  - release

build:
  image: "mcr.microsoft.com/dotnet/sdk:7.0"
  stage: test
  before_script:
    - dotnet restore src/GitlabChamp
  script:
    - dotnet publish -c Release src/GitlabChamp -o build/
  artifacts: 
    paths:
      - build/
    expire_in: 2 days

docker build:
  stage: release
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  only:
    - tags
  script:
    - >-
      /kaniko/executor \
        --context "${CI_PROJECT_DIR}/src/GitlabChamp" \
        --dockerfile "./Dockerfile" \
        --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}" \
        --destination "${CI_REGISTRY_IMAGE}:latest" \
        --build-arg "VERSION=$(echo $CI_COMMIT_TAG | sed 's/v//g')"

test-with-coverage:
  image: "mcr.microsoft.com/dotnet/sdk:7.0"
  stage: test
  variables:
    CONFIGURATION: "Debug"
    COVERAGE_FLAG: "XPlat Code Coverage"
    LOGGER_FLAG: "junit;LogFilePath=$CI_PROJECT_DIR/junit/junit-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  script:
    - 'dotnet test
            -c $CONFIGURATION
            -r $CI_PROJECT_DIR/cobertura
            --collect:"$COVERAGE_FLAG"
            --test-adapter-path:.
            --logger:"$LOGGER_FLAG"
            ./test'
  artifacts:
    paths:
      - $CI_PROJECT_DIR/test/junit/junit-test-result.xml
    reports:
      junit:
        - $CI_PROJECT_DIR/test/junit/junit-test-result.xml

semantic release:
  image: registry.fsrv.services/fsrvcorp/container/payipi:latest
  stage: release
  variables:
    GIT_STRATEGY: clone
    GIT_DEPTH: 0
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  script:
    - get-next-version -f json
    - VERSION="$(get-next-version -f json | jq -r 'select(.hasNextVersion==true) | .version')"
    - echo $VERSION
    - test -z "$VERSION" || curl --silent --request POST --header "PRIVATE-TOKEN:${CI_BOT_TOKEN}" "https://${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/repository/tags?tag_name=v${VERSION}&ref=${CI_DEFAULT_BRANCH}" | jq


